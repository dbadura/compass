// Code generated by "stringer -type ErrorType"; DO NOT EDIT.

package customerrors

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnhandledError-10]
	_ = x[InternalError-11]
	_ = x[NotFound-20]
	_ = x[NotUnique-21]
	_ = x[InvalidData-22]
	_ = x[InsufficientScopes-23]
	_ = x[ConstraintViolation-24]
	_ = x[TenantNotFound-25]
	_ = x[TenantNotExist-26]
}

const (
	_ErrorType_name_0 = "UnhandledErrorInternalError"
	_ErrorType_name_1 = "NotFoundNotUniqueInvalidDataInsufficientScopesConstraintViolationTenantNotFoundTenantNotExist"
)

var (
	_ErrorType_index_0 = [...]uint8{0, 14, 27}
	_ErrorType_index_1 = [...]uint8{0, 8, 17, 28, 46, 65, 79, 93}
)

func (i ErrorType) String() string {
	switch {
	case 10 <= i && i <= 11:
		i -= 10
		return _ErrorType_name_0[_ErrorType_index_0[i]:_ErrorType_index_0[i+1]]
	case 20 <= i && i <= 26:
		i -= 20
		return _ErrorType_name_1[_ErrorType_index_1[i]:_ErrorType_index_1[i+1]]
	default:
		return "ErrorType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
